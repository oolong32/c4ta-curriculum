<%- include('../includes/header') %>
<h2><%= title %></h2>

<%# Todo: description-feld sollte wenn schon vorhanden immer ein neues leeres feld zeigen %> 

<form method="POST" action="">
  <label for="title">Titel</label>
  <input type="text" name="title" id="title" value="<%- schoolday ? schoolday.title : '' %>"  required="true">

  <label for="date">Datum</label>
  <%# date comes as custom attribute, field gets populated on client side, see below %> 
  <input type="date" name="date" id="date" required="true" data-date="<%- schoolday.date ? schoolday.date : ''%>">

  <label for="room">Zimmer</label>
  <input type="text" name="room" id="room" value="<%= schoolday.room ? schoolday.room : '' %>">

  <% if (schoolday.description?.length) { %>
    <% for (const content of schoolday.description) { %>
    <label for="description">Beschreibung</label>
    <input type="text" name="description[]" id="description" class="description" value="<%= content %>">
    <% } %>
  <% } else { %>
    <label for="description">Beschreibung</label>
    <input type="text" name="description[]" id="description-0" class="description" value="">
  <% } %>

  <label for="teacher">Dozent:in</label>
  <% if (teachers) { %>
  <select name="teacher" id="teacher" required="true">
    <% for (teacher of teachers) { %>
      <% let selected = teacher?.id === schoolday.teacher?.id ? 'selected' : '' %>
      <option value="<%= teacher.id %>" <%= selected %>><%= teacher.name %></option>
    <% } %>
  </select>
  <% } %>

  <button type="submit">erfassen</button>
</form>


<% if (errors) { %>
  <aside class="errors">
    <ul>
      <% for (error in errors) { %>
        <li><%= error.msg %></li>
      <% } %>
    </ul>
  </aside>
<% } %>

<%- include('../includes/footer') %>

<script>
  function getAllDescriptions() {
    description = document.querySelectorAll('.description') 
  }
  function listenAllDescriptions() {
    description.forEach(item => {
      if (!item.dataset.listening) { // is element marked/listening?
        item.addEventListener('input', checkDescriptionLength)
        // mark element as listening
        item.dataset.listening = true
      }
    })
  }
  function checkDescriptionLength() {
    const descriptionCopy = Array.from(description)
    if (descriptionCopy.filter(item => item.value === "").length === 0) {
      const newInput = document.createElement("input")
      newInput.type = 'text'
      newInput.name = 'description[]'
      newInput.id = `description-${description.length}`
      newInput.className = 'description'
      description[description.length-1].insertAdjacentElement('afterend', newInput)
    }
    // update node list
    getAllDescriptions()
    // add event listener to new item
    listenAllDescriptions()
    }

  let description 
  getAllDescriptions()
  listenAllDescriptions() // could be added directly to new input, but whatevs

  // populate date field 
  // https://stackoverflow.com/questions/28729634/set-values-in-input-type-date-and-time-in-javascript
  // https://www.w3docs.com/snippets/javascript/how-to-convert-a-string-into-a-date-in-javascript.html
  const dateField = document.querySelector('#date')
  const date = new Date(dateField.dataset.date)
  dateField.valueAsDate = date

</script>